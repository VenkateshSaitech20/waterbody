'use client';
import { useState, useEffect, useCallback } from 'react';
import apiClient from '@/utils/apiClient';

const SubUserPermission = () => {
    const [dashboardPermission, setDashboardPermission] = useState({});
    const [manageRolesPermission, setManageRolesPermission] = useState({});
    const [manageUsersPermission, setManageUsersPermission] = useState({});
    const [accountSettingsPermission, setAccountSettingsPermission] = useState({});
    const [systemSettingsPermission, setSystemSettingsPermission] = useState({});
    const [websiteSettingsPermission, setWebsiteSettingsPermission] = useState({});
    const [configureSubscriptionPermission, setConfigureSubscriptionPermission] = useState({});
    const [mySubscriptionPermission, setMySubscriptionPermission] = useState({});
    const [emailPermission, setEmailPermission] = useState({});
    const [smsPermission, setSMSPermission] = useState({});
    const [voiceCallPermission, setVoiceCallPermission] = useState({});
    const [masterSettingsPermission, setMasterSettingsPermission] = useState({});
    const [categoryPermission, setCategoryPermission] = useState({});
    const [contentPermission, setContentPermission] = useState({});
    const [mailTemplateSettingsPermission, setMailTemplateSettingsPermission] = useState({});
    const [pushNotificationPermission, setPushNotificationPermission] = useState({});
    const [whatsAppPermission, setWhatsAppPermission] = useState({});
    const [availabilityPermission, setAvailabilityPermission] = useState({});
    const [ayacutnoncultivationPermission, setAyacutnoncultivationPermission] = useState({});
    const [boundaryDropPointsPermission, setBoundaryDropPointsPermission] = useState({});
    const [bundIssuePermission, setBundIssuePermission] = useState({});
    const [barrelTypePermission, setBarrelTypePermission] = useState({});
    const [bundPermission, setBundPermission] = useState({});
    const [conditionPermission, setConditionPermission] = useState({});
    const [catchmentTypePermission, setCatchmentTypePermission] = useState({});
    const [croppingPermission, setCroppingPermission] = useState({});
    const [crossSectionPermission, setCrossSectionPermission] = useState({});
    const [distributionLandPermission, setDistributionLandPermission] = useState({});
    const [depthSillLevelPermission, setDepthSillLevelPermission] = useState({});
    const [exoticSpeciesPermission, setExoticSpeciesPermission] = useState({});
    const [familyNaturePermission, setFamilyNaturePermission] = useState({});
    const [fieldChannelTypePermission, setFieldChannelTypePermission] = useState({});
    const [fenceConditionPermission, setFenceConditionPermission] = useState({});
    const [fenceTypePermission, setFenceTypePermission] = useState({});
    const [ghatConditionPermission, setGhatConditionPermission] = useState({});
    const [inletTypePermission, setInletTypePermission] = useState({});
    const [natureInvestmentPermission, setNatureInvestmentPermission] = useState({});
    const [ownershipPermission, setOwnershipPermission] = useState({});
    const [outletTypePermission, setOutletTypePermission] = useState({});
    const [ooraniFunctionPermission, setOoraniFunctionPermission] = useState({});
    const [mwlStonesPermission, setMwlStonesPermission] = useState({});
    const [pitchingConditionPermission, setPitchingConditionPermission] = useState({});
    const [sourcePermission, setSourcePermission] = useState({});
    const [spreadIssuePermission, setSpreadIssuePermission] = useState({});
    const [sluicesSurplusTypePermission, setSluicesSurplusTypePermission] = useState({});
    const [surplusWeirPermission, setSurplusWeirPermission] = useState({});
    const [slitTrapPermission, setSlitTrapPermission] = useState({});
    const [streamIssuePermission, setStreamIssuePermission] = useState({});
    const [shutterPermission, setShutterPermission] = useState({});
    const [shutterConditionPermission, setShutterConditionPermission] = useState({});
    const [stonePitchingPermission, setStonePitchingPermission] = useState({});
    const [typePermission, setTypePermission] = useState({});
    const [tankFunctionPermission, setTankFunctionPermission] = useState({});
    const [tankTypePermission, setTankTypePermission] = useState({});
    const [tankUniquenessPermission, setTankUniquenessPermission] = useState({});
    const [templeTankTypePermission, setTempleTankTypePermission] = useState({});
    const [tankIssuePermission, setTankIssuePermission] = useState({});
    const [reviewPermission, setReviewPermission] = useState({});
    const [gwbPermission, setGwbPermission] = useState({});
    const [tankWBDPermission, setTankWBDPermission] = useState({});
    const [pwdTankPermission, setPwdTankPermission] = useState({});
    const [approvedReviewPermission, setApprovedReviewPermission] = useState({});

    const fetchPermissions = useCallback(async () => {
        const response = await apiClient.post('/api/menu/permissions', {});
        if (response.data.result === true) {
            const permissions = response.data.message;
            setDashboardPermission(permissions["dashboard"] || {});
            setManageRolesPermission(permissions["manage-roles"] || {});
            setManageUsersPermission(permissions["manage-users"] || {});
            setAccountSettingsPermission(permissions["account-settings"] || {});
            setSystemSettingsPermission(permissions["system-settings"] || {});
            setWebsiteSettingsPermission(permissions["website-settings"] || {});
            setConfigureSubscriptionPermission(permissions["configure-subscription"] || []);
            setMySubscriptionPermission(permissions["my-subscription"] || []);
            setEmailPermission(permissions["email"] || []);
            setSMSPermission(permissions["sms"] || []);
            setVoiceCallPermission(permissions["voice-call"] || []);
            setMasterSettingsPermission(permissions["location"] || {});
            setCategoryPermission(permissions["category"] || {});
            setContentPermission(permissions["content"] || {});
            setMailTemplateSettingsPermission(permissions["mail-template-settings"] || {});
            setPushNotificationPermission(permissions["push-notification"] || {});
            setWhatsAppPermission(permissions["whatsapp"] || {});
            setAvailabilityPermission(permissions["availability"] || {});
            setAyacutnoncultivationPermission(permissions["ayacutnoncultivation"] || {});
            setBoundaryDropPointsPermission(permissions["boundary-drop-points"] || {});
            setBundIssuePermission(permissions["bund-issue"] || {});
            setBarrelTypePermission(permissions["barrel-type"] || {});
            setBundPermission(permissions["bund"] || {});
            setConditionPermission(permissions["condition"] || {});
            setCatchmentTypePermission(permissions["catchment-type"] || {});
            setCroppingPermission(permissions["cropping"] || {});
            setCrossSectionPermission(permissions["cross-section"] || {});
            setDistributionLandPermission(permissions["distribution-land"] || {});
            setDepthSillLevelPermission(permissions["depth-sill-level"] || {});
            setExoticSpeciesPermission(permissions["exotic-species"] || {});
            setFamilyNaturePermission(permissions["family-nature"] || {});
            setFieldChannelTypePermission(permissions["field-channel-type"] || {});
            setFenceConditionPermission(permissions["fence-condition"] || {});
            setFenceTypePermission(permissions["fence-type"] || {});
            setGhatConditionPermission(permissions["ghat-condition"] || {});
            setInletTypePermission(permissions["inlet-type"] || {});
            setNatureInvestmentPermission(permissions["nature-investment"] || {});
            setOwnershipPermission(permissions["ownership"] || {});
            setOutletTypePermission(permissions["outlet-type"] || {});
            setOoraniFunctionPermission(permissions["oorani-function"] || {});
            setMwlStonesPermission(permissions["mwl-stones"] || {});
            setPitchingConditionPermission(permissions["pitching-condition"] || {});
            setSourcePermission(permissions["source"] || {});
            setSpreadIssuePermission(permissions["spread-issue"] || {});
            setSluicesSurplusTypePermission(permissions["sluices-surplus-type"] || {});
            setSurplusWeirPermission(permissions["surplus-weir"] || {});
            setSlitTrapPermission(permissions["slit-trap"] || {});
            setStreamIssuePermission(permissions["stream-issue"] || {});
            setShutterPermission(permissions["shutter"] || {});
            setShutterConditionPermission(permissions["shutter-condition"] || {});
            setStonePitchingPermission(permissions["stone-pitching"] || {});
            setTypePermission(permissions["type"] || {});
            setTankFunctionPermission(permissions["tank-function"] || {});
            setTankTypePermission(permissions["tank-type"] || {});
            setTankUniquenessPermission(permissions["tank-uniqueness"] || {});
            setTempleTankTypePermission(permissions["temple-tank-type"] || {});
            setTankIssuePermission(permissions["tank-issue"] || {});
            setReviewPermission(permissions["review"] || {});
            setGwbPermission(permissions["government-waterbodies"] || {});
            setTankWBDPermission(permissions["waterbody-tanks"] || {});
            setPwdTankPermission(permissions["pwd-tanks"] || {});
            setApprovedReviewPermission(permissions["approved-reviews"] || {});
        }
    }, []);

    useEffect(() => {
        fetchPermissions();
    }, [fetchPermissions]);

    return { dashboardPermission, manageRolesPermission, manageUsersPermission, accountSettingsPermission, systemSettingsPermission, websiteSettingsPermission, configureSubscriptionPermission, mySubscriptionPermission, emailPermission, smsPermission, voiceCallPermission, masterSettingsPermission, categoryPermission, contentPermission, mailTemplateSettingsPermission, pushNotificationPermission, whatsAppPermission, availabilityPermission, ayacutnoncultivationPermission, boundaryDropPointsPermission, bundIssuePermission, barrelTypePermission, bundPermission, conditionPermission, catchmentTypePermission, croppingPermission, crossSectionPermission, distributionLandPermission, depthSillLevelPermission, exoticSpeciesPermission, familyNaturePermission, fieldChannelTypePermission, fenceConditionPermission, fenceTypePermission, ghatConditionPermission, inletTypePermission, natureInvestmentPermission, ownershipPermission, outletTypePermission, ooraniFunctionPermission, mwlStonesPermission, pitchingConditionPermission, sourcePermission, spreadIssuePermission, sluicesSurplusTypePermission, surplusWeirPermission, slitTrapPermission, streamIssuePermission, shutterPermission, shutterConditionPermission, stonePitchingPermission, typePermission, tankFunctionPermission, tankTypePermission, tankUniquenessPermission, templeTankTypePermission, tankIssuePermission, reviewPermission, gwbPermission, tankWBDPermission, pwdTankPermission, approvedReviewPermission };
};

export default SubUserPermission;